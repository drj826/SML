# Structured Manuscript Language (SML) Vocabulary

#   Dependency: This vocabulary depends on the IEEE vocabulary.  If
#   you include this vocabulary in your document be sure to also
#   include 'glossary-ieee.txt'.

#######################################################################
# A
######################################################################

glossary:: acceptance test {sml} = (SML) Formal testing conducted to
determine whether or not a system, subsystem, or configuration item
satisfies its acceptance criteria and to enable the customer to
determine whether or not to accept

glossary:: acronym {sml} = (SML) A type of abbreviation in which a
term is based on the initial letters of the various elements of a
full word phrase

glossary:: anti-pattern {sml} = (SML) (1) a [g:sml:pattern] that may
be commonly used but is ineffective and/or counterproductive in
practice; (2) obvious, but wrong, solutions to recurring problems; (3)
common approaches to solving recurring problems that prove to be
ineffective

glossary:: assertion {sml} = (SML) An [g:sml:environment] that defines
a logical assertion, that is, a subject - predicate - object triple.
Assertions are commonly made about entities (problems, solutions, tests,
results, tasks, and roles).

glossary:: attachment {sml} = (SML) An [g:sml:environment] that
represents a document structure that attaches an external file at a
specific place within an [g:sml:SML] document

glossary:: attribute definition {sml} = (SML) A [g:sml:definition] that
defines a key/value pair where the key is the attribute name and the
value is the definition.  Attribute definitions are limited to a
single block of text

glossary:: audio {sml} = (SML) An [g:sml:environment] that instructs
the publishing application to insert an audio clip into the document

######################################################################
# B
######################################################################

glossary:: BNF = [g:Backus-Naur Form]

glossary:: BRD = Business Requirements Document

###

glossary:: Backus-Naur Form = ([g:BNF]) a notation technique for
context-free grammars, often used to describe the syntax of languages
used in computing, such as computer programming languages, document
formats, instruction sets and communication protocols. It is applied
wherever exact descriptions of languages are needed, for instance, in
official language specifications, in manuals, and in textbooks on
programming language theory

###

glossary:: block {sml} = (SML) A contiguous sequence of one or more
~~whole~~ [g:sml:line]s of text.  Blocks end with either a blank line
or the beginning of another block. Blocks cannot contain blank lines.
Blocks may contain [g:sml:inline] elements

glossary:: break-fix {sml} = (SML) To replace/fix a broken part or
to revert the system back to its approved baseline configuration.
Examples include replace a hard drive, clean a corrupted work file,
and restore a corrupted definition file.  Performing a break-fix
action may or may not be an emergency.  Any change to a baseline CI
that does ~~not~~ reset the CI to its approved baseline configuration
constitutes a change and is ~~not~~ a break-fix

glossary:: business requirement {sml} = (SML) A requirement that
describes what an organization or role must do for another
organization or role.  Business requirements begin with the phrase,
``The organization shall...'' [G:sml:system requirement]s are derived
from business requirements and consist of [g:sml:functional
requirement]s, [g:sml:non-functional requirement]s, and
[g:sml:technical requirement]s

######################################################################
# C
######################################################################

glossary:: CSV = [g:Comma Separated Value]

###

glossary:: Comma Separated Value = ([g:CSV]) a file format in which
each line contains one ``record'' of data fields separated by commas

###

glossary:: comment {sml} = (SML) A [g:sml:division] to be omitted from
the rendered [g:sml:document].

glossary:: compliance directive {sml} = (SML) A written authoritative
statute, regulation, or directive that requires an organization to
comply with a process or standard.  [G:sml:business requirement]s are
often derived from compliance directives.  See also [g:sml:mission
directive]

glossary:: component integration test {sml} = (SML) Testing of groups
of related releasable components to verify they satisfy allocated
requirements and work together as designed

glossary:: component test {sml} = (SML) Testing of individual
releasable software components to verify they satisfy allocated
requirements

glossary:: conditional {sml} = (SML) A [g:sml:division] to be included
in the rendered document only if a token is defined in the
[g:sml:document] [g:sml:preamble].

glossary:: content {sml} = (SML) Text meant to convey meaning.  A type
of markup feature that describes the ~~meaning~~ of [g:sml:text] which
allows authors to establish relationships between [g:sml:entity]s in a
[g:sml:document]. For example: [g:sml:exercise]s, [g:sml:slide]s,
[g:sml:quotation]s, [g:sml:demo], [g:sml:problem]s, [g:sml:solution]s,
[g:sml:test]s, [g:sml:result]s, [g:sml:task]s, [g:sml:role]s

######################################################################
# D
######################################################################

glossary:: DVI = [g:Device Independent]

###

glossary:: Device Independent = ([g:DVI]) The native output format of
LaTeX

###

glossary:: data format {sml} = (SML) The structure of a computer file

glossary:: definition {sml} = (SML) A special [g:sml:block] that
defines an key/value pair.  Definitions are limited to a single block
of text. Definitions can declare themselves part of a namespace to
distinguish between duplicate keys from different namespaces.
Definitions can declare themselves a specific alternative to
distinguish between multiple identical keys within the same namespace

glossary:: demo {sml} = (SML) A [g:sml:region] that represents a
demonstration that an instructor might give during a classroom
presentation.  Demos are expressed as [g:sml:region]s so they may
contain environments like tables and figures

glossary:: demonstration {sml} = (SML) A procedure to verify system
requirements that cannot be tested otherwise

glossary:: description {sml} = (SML) A [g:sml:block] that describes the
contents of a [g:sml:document], [g:sml:environment], [g:sml:region],
[g:sml:entity], or [g:sml:section].  A document description is the same
as a document abstract

glossary:: descriptive markup {sml} = [G:sml:markup] designed to
describe the meaning, structure, or presentation of the content.  See
[g:sml:markup language]. Contrast with [g:sml:procedural markup]

glossary:: development testing {sml} = (SML) Testing conducted to
establish whether a new software product or software-based system (or
components of it) satisfies its criteria. The criteria will vary based
on the level of test being performed. Developmental testing in
comprised of the following test levels: (1) [g:sml:unit test], (2)
[g:sml:component test], and (3) [g:sml:component integration test]

glossary:: division {sml} = (SML) A contiguous sequence of whole
[g:sml:line]s.  A division has an unambiguous beginning and end.
Sometimes the beginning and end are explicit and other times they are
implicit.  A division may be uniquely identified using an [g:sml:ID].
The [g:sml:ID] may be used to refer to the division

glossary:: document {sml} = (SML) A written work about a topic.
[g:sml:SML] document types are: book, report, and article. An
[g:sml:SML] document is composed of a [g:sml:document preamble]
followed by a [g:sml:document narrative]

glossary:: document narrative {sml} = (SML) The [g:sml:division] of a
[g:sml:SML] [g:sml:document] that immediately follows the [g:sml:document
preamble] and goes to the end of the [g:sml:document].  Document
narratives may contain [g:sml:block]s, [g:sml:section]s,
[g:sml:environment]s, [g:sml:region]s, and [g:sml:element]s.  The
document narrative begins with the first [g:sml:block],
[g:sml:section], [g:sml:environment], [g:sml:region], or non-preamble
[g:sml:element]

glossary:: document preamble {sml} = (SML) The [g:sml:division] of a
[g:sml:SML] [g:sml:document] that starts at the beginning of the document
and goes to the beginning of the [g:sml:document narrative]. Document
preambles contain [g:sml:element]s that describe the document.

######################################################################
# E
######################################################################

glossary:: EBNF = Extended [g:BNF]

###

glossary:: eXtensible markup Language = ([g:XML]) a ``meta-language''
used to define markup languages

###

glossary:: element {sml} = (SML) A special type of [g:sml:block]
containing a name/value pair expressing a piece of structured
information or instructing the publishing application to take some
action.  Elements are usually defined within [g:sml:preamble]
[g:sml:division]s although [g:sml:narrative element]s are only allowed
in [g:sml:narrative] content.  See also [g:sml:property]

glossary:: entity {sml} = (SML) A [g:sml:region] that represents
content with semantic meaning.  Entities are often related to other
entities. Common entities include problems, solutions, allocations,
tests, results, tasks, and roles

glossary:: environment {sml} = (SML) A [g:sml:division] that describes
the intended ~~format~~, ~~structure~~, or ~~content~~ of the
contained [g:sml:block]s of [g:sml:text].  Environments are composed
of a [g:sml:preamble] followed by an optional [g:sml:environment
narrative].  Environments ~~may not~~ be nested. Environments ~~may
not~~ contain [g:sml:region]s.  Environments commonly have titles,
IDs, and descriptions. Common environments include [g:sml:table]s,
[g:sml:figure]s, [g:sml:listing]s, and [g:sml:attachment]s. Contrast
with [g:sml:region]

glossary:: environment narrative {sml} = (SML) The [g:sml:division] of
a [g:sml:SML] [g:sml:environment] that immediately follows the
[g:sml:preamble] and goes to the end of the [g:sml:environment].
Environment narratives may contain [g:sml:block]s and
[g:sml:element]s.  Environment narratives ~~may not~~ contain
[g:sml:region]s or [g:sml:environment]s

glossary:: epigraph {sml} = (SML) A quotation at the beginning of a
book, chapter, etc. suggesting its theme

glossary:: epigraph environment {sml} = (SML) An [g:sml:environment]
that tells the publishing application to render the [g:sml:content] as
an [g:sml:epigraph]

glossary:: exercise {sml} = (SML) A [g:sml:region] that represents an
exercise a student might work through to better understand concepts
described in the text

######################################################################
# F
######################################################################

glossary:: FRD {sml} = (SML) [g:sml:Functional Requirements Document]

###

glossary:: Functional Requirements Document {sml} = (SML)
([g:sml:FRD]) Serves as the foundation for system design and
development; captures functional/user requirements to be implemented
in a new or enhanced system; the systems subject matter experts
document these requirements into the requirements traceability matrix,
which shows mapping of each detailed functional requirement to its
source (Concept of Operations, System Boundary Document, Mission Need
Statement, and System Security Plan). This is a complete, user
oriented functional and data requirements for the system which must be
defined, analyzed, and documented to ensure that user and system
requirements have been collected and documented

###

glossary:: feasibility {sml} = (SML) The extent to which the benefits
of a new or enhanced system will exceed the total costs and also
satisfies the business requirements

glossary:: figure {sml} = (SML) An [g:sml:environment] that instructs
the publishing application to insert a figure into the document

glossary:: file {sml} = (SML) A collection of data stored on a
permanent storage device

glossary:: footnote {sml} = (SML) A short note of explanation or
reference separated from the main text to prevent disrupting the flow
of the main text

glossary:: format {sml} = (SML) (noun) A specification for
representing document content, structure, and presentation; (verb) To
transform document content from one format to another format

glossary:: fragment {sml} = (SML) A file containing SML text designed
to be reused in multiple SML documents

glossary:: functional requirement {sml} = (SML) A requirement that
describes what a [g:ieee:system] or [g:sml:system component] must do
for a [g:ieee:user].  Functional requirements begin with the phrase,
``The system shall enable the user to...'' Functional requirements are
typically derived from [g:sml:business requirement]s. Functional
requirements are independent of system implementation. See also
[g:sml:non-functional requirement] and [g:sml:system requirement]

######################################################################
# G
######################################################################

glossary:: GPL = General Public License

###

glossary:: General Public License = ([g:GPL]) A software license
designed to ensure software is freely usable by anyone for any
purpose.  The GPL takes away your right to put restrictions on
software use

###

glossary:: glossary {sml} = (SML) A list of terms in a special
subject, field, or area of usage, with accompanying definitions

glossary:: glossary definition {sml} = (SML) A [g:sml:definition] that
defines a [g:sml:glossary] term.  Glossary definitions are limited to
a single block of text

######################################################################
# H
######################################################################

glossary:: HTML = Hypertext markup Language

######################################################################
# I
######################################################################

glossary:: ID {sml} = (SML) A string of characters that
uniquely identifies a referenceable element of document content

###

glossary:: include environment {sml} = (SML) An [g:sml:environment]
that tells the publishing application to include the [g:sml:text] from
another file

glossary:: index {sml} = (SML) An alphabetically organized listing of
terms and with references to where those terms are used in the
document

glossary:: inline {sml} = (SML) A contiguous string of [g:sml:text]
that may be a ~~partial~~ line of text or may span one or more ~~whole
or partial~~ lines. Inline elements may be used within [g:sml:block]s
but not vice-versa.  An inline text element may span multiple
[g:sml:line]s but may ~~not~~ span multiple [g:sml:block]s

glossary:: instructional demonstration {sml} = (SML) a description of
a series of tasks that reinforce and illustrate concepts being taught

######################################################################
# J
######################################################################

######################################################################
# K
######################################################################

glossary:: keypoints {sml} = (SML) A [g:sml:region] that represents the
key points of a document section

######################################################################
# L
######################################################################

glossary:: library {sml} = (SML) A collection of related [g:sml:SML]
[g:sml:document]s, reusable SML document [g:sml:fragment]s, SML
[g:sml:template]s, and arbitrary non-SML [g:sml:file]s

glossary:: line {sml} = (SML) A single line of raw text from a
[g:sml:SML] file.  A line begins in the first column even if the
leading characters are whitespace characters.  A line ends with a
[g:sml:newline] character.  Authors often wrap lines after
approximately 70 characters to improve readability

glossary:: listing {sml} = (SML) An [g:sml:environment] that instructs
the publishing application to insert a listing into the document

######################################################################
# M
######################################################################

glossary:: markup {sml} = (SML) In an [g:sml:SML] file, text strings
that describe the intended meaning, [g:sml:structure],
[g:sml:presentation], or processing of content, sometimes called
``tags.''  Contrast with [g:sml:content].  See [g:sml:descriptive
markup] and [g:sml:procedural markup]

glossary:: markup language {sml} = A standard for annotating text that
syntactically distinguishes markup from content for the purpose of
describing content ([g:sml:descriptive markup]) or directing how a
processing application should process the content ([g:sml:procedural
markup]).  The term originated from the ``marking up'' of authors'
manuscripts, i.e. the typesetting instructions added by editors

glossary:: mission directive {sml} = (SML) A written authoritative
statute, regulation, or directive that allocates a mission to an
organization.  [G:sml:business requirement]s are often derived from
mission directives.  See also [g:sml:compliance directive]

######################################################################
# N
######################################################################

glossary:: narrative {sml} = (SML) The [g:sml:division] of an
[g:sml:SML] [g:sml:document], [g:sml:region], or [g:sml:environment]
that immediately follows the [g:sml:preamble] and continues to the end
of the [g:sml:document], [g:sml:region], or [g:sml:environment].  See
also [g:sml:document narrative], [g:sml:region narrative], and
[g:sml:environment narrative]

glossary:: narrative element {sml} = (SML) An [g:sml:element] that may
appear anywhere in narrative content but not in preamble content.
Most elements are [g:sml:preamble element]s only allowed in preamble
content.  Contrast with [g:sml:preamble element]

glossary:: newline {sml} = (SML) The character that ends a line of
text.  Newline is also known as ``line break,'' ``end-of-line,'' or
``EOL.''  Software and operating systems typically represent newline
characters with one or two control characters. Systems based on ASCII
or a compatible character set use either ||LF|| (Line feed, `||\n||',
||0x0A||, 10 in decimal) or ||CR|| (Carriage return, `||\r||',
||0x0D||, 13 in decimal) individually, or ||CR|| followed by ||LF||
(||CR+LF||, `||\r\n||', ||0x0D0A||). These characters are based on
printer commands: The line feed indicated that one line of paper
should feed out of the printer, and a carriage return indicated that
the printer carriage should return to the beginning of the current
line

glossary:: non-functional requirement {sml} = (SML) A type of
[g:sml:system requirement] that defines something a system must ~~be~~
(i.e. be secure, be maintainable, be scalable, be usable, be
available, etc.).  Non-functional requirements are often called
`ilities' (security, maintainability, scalability, usability,
availability, etc.).  Non-functional requirements begin with the
phrase, ``The system shall be...'' Non-functional requirements are
often derived from [g:sml:business requirement]s.See also
[g:sml:functional requirement] and [g:sml:technical requirement]

######################################################################
# O
######################################################################

glossary:: ontology {sml} = (SML) An explicit formal specification of
terms to represent the entities defined to exist in some area of
interest, the relationships that hold among them, and the formal
axioms that constrain the interpretation and well-formed use of these
terms

glossary:: operational baseline {sml} = (SML) A [g:ieee:baseline] that
identifies the system accepted and configured by the users in the
operational environment after a period of onsite test using production
data

######################################################################
# P
######################################################################

glossary:: PDF = Portable Document Format

###

glossary:: PDFLaTeX = A variation of the LaTeX system that produces PDF
output instead of [g:DVI] output

glossary:: Perl = Practical Extraction and Reporting Language.  The
Swiss Army chain-saw of scripting languages.

###

glossary:: parser {sml} = (SML) A software artifact that performs
syntactic analysis of text (a sequence of tokens) to check for correct
syntax and build a data structure implicit in the input tokens

glossary:: pattern {sml} = (SML) a general reusable solution to a
commonly occurring problem within a given context in software
design. A design pattern is not a finished design that can be
transformed directly into code. It is a description or template for
how to solve a problem that can be used in many different situations

glossary:: preamble {sml} = (SML) The opening [g:sml:division] of an
[g:sml:SML] [g:sml:document], [g:sml:region] or [g:sml:environment]
that contains data [g:sml:element]s

glossary:: preamble element {sml} = (SML) An [g:sml:element] that may
be used in [g:sml:preamble] content but not [g:sml:narrative] content.
Most elements are preamble elements.  Contrast with [g:sml:narrative
element]

glossary:: preformatted {sml} = (SML) An [g:sml:environment] that
instructs the publishing application to insert its [g:sml:content] as
preformatted text

glossary:: presentation {sml} = (SML) The appearance of content. A type
of markup feature that describes the appearance of
[g:sml:content]. For example: bold, italics, line break, page break,
font size, text justification

glossary:: problem {sml} = (SML) A [g:sml:region] that describes a
problem to be solved.  A problem is an [g:sml:entity]

glossary:: procedural markup {sml} = [G:sml:markup] designed to direct
a processing application how to process text.  See [g:sml:markup
language].  Contras with [g:sml:descriptive markup]

glossary:: property {sml} = A characteristic attribute that describes
any [g:sml:division] of [g:sml:document] [g:sml:content].  Properties
are expressed using [g:sml:element]s

glossary:: publish {sml} = (SML) A program that converts minimally
formatted text files into published documents

######################################################################
# Q
######################################################################

glossary:: quotation {sml} = (SML) A [g:sml:region] that represents a
quotation

######################################################################
# R
######################################################################

glossary:: RTF = [g:Rich Text Format]

glossary:: RTM {sml} = (SML) [g:sml:requirements traceability matrix]

###

glossary:: Rich Text Format = ([g:RTF]) the document interchange format
used by Microsoft Word.

###

glossary:: reasoner {sml} = (SML) A semantic reasoner, reasoning
engine, rules engine, or simply a reasoner, is a piece of software
able to infer logical consequences from a set of asserted facts or
axioms. The notion of a semantic reasoner generalizes that of an
inference engine, by providing a richer set of mechanisms to work
with. The inference rules are commonly specified by means of an
ontology language, and often a description language. Many reasoners
use first-order predicate logic to perform reasoning; inference
commonly proceeds by forward chaining and backward chaining
[cite:wp-semantic-reasoner]

glossary:: reference {sml} = (SML) Same as a [g:sml:source]

glossary:: region {sml} = (SML) A [g:sml:division] that describes the
intended ~~content~~ of the [g:sml:text].  Regions consist of a
[g:sml:preamble] followed by an optional [g:sml:region
narrative]. Regions ~~may~~ contain [g:sml:environment]s. Some regions
represent [g:sml:entity]s ([g:sml:problem]s, [g:sml:solution]s,
[g:sml:test]s, [g:sml:result]s, [g:sml:task]s, and
[g:sml:role]s). Other common regions include [g:sml:demo],
[g:sml:exercise], [g:sml:keypoints], [g:sml:quotation], and
[g:sml:slide]. Contrast with [g:sml:environment]

glossary:: region narrative {sml} = (SML) The [g:sml:division] of a
[g:sml:SML] [g:sml:region] that immediately follows the
[g:sml:preamble] and goes to the end of the [g:sml:region].  Region
narratives may contain [g:sml:block]s, [g:sml:element]s, and
[g:sml:environment]s.  Region narratives ~~may not~~ contain
[g:sml:region]s

glossary:: regression test {sml} = (SML) In software maintenance, the
rerunning of test cases that previously executed correctly in order to
detect errors introduced by the maintenance activity

glossary:: release {sml} = (SML) A configuration management activity
wherein a specific version of a software product is made available for
use

glossary:: requirement {sml} = (SML) A statement of needed
organizational or system capability.  Requirements for organizational
capability are called [g:sml:business requirement]s.  Requirements for
system capability are called [g:sml:system requirement]s

glossary:: requirements traceability matrix {sml} = (SML)
([g:sml:RTM]) A document or document part that provides a method for
tracing requirements and their implementation through the development
process

glossary:: result {sml} = (SML) A [g:sml:region] that represents the
result of a test.  A result is an [g:sml:entity]

glossary:: revisions environment {sml} = (SML) An
[g:sml:environment] that describes the revision history of a
document

glossary:: role {sml} = (SML) A [g:sml:region] that represents the role
of an individual, that is, a description of the individual's
responsibilities

######################################################################
# S
######################################################################

glossary:: SML {sml} = (SML) [g:sml:Structured Manuscript Language]

glossary:: SRD {sml} = (SML) System Requirements Document

###

glossary:: SML file {sml} = (SML) A [g:sml:file] containing
[g:sml:SML] formatted [g:sml:text]

glossary:: Structured Manuscript Language {sml} = (SML) A minimalistic
[g:sml:descriptive markup] language designed to be human readable,
easy to edit, easy to automatically generate, able to express and
validate semantic relationships, and contain all information necessary
to publish professional documentation from plain text manuscripts

###

glossary:: section {sml} = (SML) A [g:sml:division] of document
structure that begins with a section heading and contains information
about a specific topic.  Authors may create section headings at
different levels to create a hierarchy of sections to organize
document content

glossary:: sidebar {sml} = (SML) An [g:sml:environment] that instructs
the publishing application to insert its [g:sml:content] as a side bar

glossary:: shall statement {sml} = (SML) A definitive statement of a
requirement.  Requirements are meant to communicate needs between
stakeholders and solution providers. Requirements should be easy to
understand for users and solution providers. One common way to
document a system requirement is stating what the system ~~shall~~
do. See also [g:sml:use case]

glossary:: slide {sml} = (SML) A [g:sml:region] that describes the
content of a presentation slide that an instructor might use to teach
a class

glossary:: solution {sml} = (SML) A [g:sml:region] that describes the
solution to a problem.  A solution is an [g:sml:entity]

glossary:: source {sml} = (SML) An [g:sml:environment] that describes a
cite-able bibliographic source

glossary:: special feature {sml} = (SML) A feature that enables
document authors to minimize the maintenance burden of updating
documents and to automate certain document content generation

glossary:: structure {sml} = (SML) The way content is organized.  A
type of markup feature used to ~~organize~~ [g:sml:document]
content. For example: sentences, paragraphs, [g:sml:section]
hierarchies, [g:sml:table]s, [g:sml:figure]s, [g:sml:listing]s

glossary:: system component {sml} = (SML) Any discrete item that is
part of a system or subsystem

glossary:: system requirement {sml} = (SML) A requirement that
describes what a system must ~~do~~ or ~~be~~.  Vetting Operations
engineering uses three types of system requirements: [g:sml:functional
requirement]s, [g:sml:non-functional requirement]s, and
[g:sml:technical requirement]s

glossary:: systems engineering {sml} = (SML) The interdisciplinary
approach governing the total technical and managerial effort required
to transform a set of customer needs, expectations, and constraints
into a product solution and support that solution throughout the
product's life. This includes the definition of technical performance
measures, the integration of engineering specialties towards the
establishment of a product architecture, and the definition of
supporting life-cycle processes that balance cost, performance, and
schedule objectives.

######################################################################
# T
######################################################################

glossary:: table {sml} = (SML) An [g:sml:environment] that instructs
the publishing application to insert a table into the document.
Tables can include titles and descriptions (i.e., captions)

glossary:: task {sml} = (SML) A [g:sml:region] that represents a task,
a unit of work to be performed.  A task is an [g:sml:entity]

glossary:: technical requirement {sml} = (SML) A [g:sml:requirement]
that describes something a [g:ieee:system] must ~~do~~ to support
another system function.  Note the difference between a ~~technical
requirement~~ and a ~~[g:sml:functional requirement]~~.  A ~~technical
requirement~~ describes what the system must do for another
[g:ieee:system] or [g:sml:system component].  A ~~functional
requirement~~ describes what the system must do for a ~~user~~.
Technical requirements begin with the phrase, ``The system shall...''
Technical requirements may be implementation specific/dependent. See
also DHS definition of [g:sml:system requirement].  Technical
requirements are derived from [g:sml:functional requirement]s and
[g:sml:non-functional requirement]s.

glossary:: template {sml} = (SML) A [g:sml:fragment] that represents a
reusable division of document [g:sml:structure] the [g:sml:content] of
which is filled-in via [g:sml:variable definition], [g:sml:attribute
definition], and/or [g:sml:glossary definition] substitution

glossary:: test {sml} = (SML) A [g:sml:region] that describes a test, a
method of proving a solution solves a problem.  A test is an
[g:sml:entity]

glossary:: text {sml} = (SML) A string of 7-bit ASCII encoded
characters, any length, may contain white space characters (space,
tab, newline).  See also [g:sml:inline], [g:sml:markup] and
[g:sml:content]

glossary:: title {sml} = (SML) A [g:sml:block] that is a brief name,
description, or heading of a [g:sml:document], [g:sml:environment],
[g:sml:region], [g:sml:entity], or [g:sml:section]

######################################################################
# U
######################################################################

glossary:: unit test {sml} = (SML) The lowest level of automated test,
often called an ``assertion,'' that tests a single program function or
configuration for expected success or failure

glossary:: unit test case {sml} = (SML) (1) An automated, repeatable
[g:ieee:test case] containing [g:sml:unit test]s; (2) A unit test case
description file that uniquely identifies and describes a unit test
case and serves to establish traceability between unit test cases,
test results, configuration items, and requirements.  A unit test case
traces to a single test result file

glossary:: use case {sml} = (SML) A technique for capturing functional
requirements of business systems and, potentially, of an IT system to
support the business system.  The use case model uses ``Actors'' and
``use cases.'' An Actor is the representation of a person or system
which exists outside the system under study and who (or which)
performs a sequence of activities in a dialog with the system.  A Use
Case represents a single interaction between a primary actor (who
initiates the interaction) and other (secondary) actors, and the
system itself. The interaction is presented as a sequence of simple
steps

######################################################################
# V
######################################################################

glossary:: variable definition {sml} = (SML) A [g:sml:definition] that
defines a key/value pair where the key is the variable name and the
value is the definition.  Variable definitions are limited to a single
block of text

glossary:: video {sml} = (SML) An [g:sml:environment] that instructs
the publishing application to insert a video clip into the document

######################################################################
# W
######################################################################

######################################################################
# X
######################################################################

glossary:: XML = [g:eXtensible markup Language]

######################################################################
# Y
######################################################################

######################################################################
# Z
######################################################################
