>>>solution

######################################################################

title:: SML/Reasoner.pm Module

label:: ci-000380

revision:: $Revision: 10975 $

date:: $Date: 2012-10-27 14:49:09 -0600 (Sat, 27 Oct 2012) $

author:: $Author: don.johnson $

type:: software

parent:: ci-000004

description:: The Reasoner.pm module implements the SML::Reasoner
class (a semantic reasoner).  A semantic reasoner, reasoning engine,
rules engine, or simply a reasoner, is a piece of software able to
infer logical consequences from a set of asserted facts or axioms. The
notion of a semantic reasoner generalizes that of an inference engine,
by providing a richer set of mechanisms to work with. The inference
rules are commonly specified by means of an ontology language, and
often a description language. Many reasoners use first-order predicate
logic to perform reasoning; inference commonly proceeds by forward
chaining and backward chaining [wp-semantic-reasoner] The
{lit:SML::Reasoner} class is used to validate higher-level document
semantics like business rules to which engineering documents must
conform.

#---------------------------------------------------------------------
# allocations

allocation:: al-000241 # rq-000115 Validate Requirements Documents
allocation:: al-000242 # rq-000116 Validate Design Documents
allocation:: al-000243 # rq-000117 Validate Test Documents

allocation:: al-000267 # rq-000193 Emit an INFO Message on Inference

allocation:: al-000270 # rq-000190 Validate Document Contains no Redundant Allocations

allocation:: al-000282 # rq-000200 Validate Engineering Document Semantics

######################################################################

index:: ci-000380; Reasoner.pm module

= [g:sml:reasoner] = [def:sml:reasoner]

<<<solution
